@startuml

interface Discounter {
    double applyDiscount(int price)
}

class StaffDiscount implements Discounter {
    double applyDiscount(int price)
}

class BlackFridayDiscount implements Discounter {
    double applyDiscount(int price)
}

Basket - Discounter

class Basket {
    List<Purchasable> purchases
    Discounter discount
    void sortBasket()
    void makePurchases()
    boolean addPurchase(Purchasable purchase)
}

abstract class Product implements Purchasable{
    int getId()
}

interface Purchasable extends Comparable {
    double getPrice()
    String getReceipt()
}

class Hat extends Product {
    double getPrice()
    String getReceipt()
}

class Ball extends Product {
    double getPrice()
    String getReceipt()
}

class Promotion implements Purchasable {
    double getPrice()
    String getReceipt()
}

Basket -- Purchasable

class GiftWrap implements Purchasable {

}


@enduml